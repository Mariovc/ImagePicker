/*
 * Copyright 2016 Mario Velasco Casquero
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply from: "$project.rootDir/script-git-version.gradle"

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

def config = rootProject.ext.configuration;
def libs = rootProject.ext.libraries;

android {
    compileSdkVersion config.compileVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.packageName
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode gitVersionCode
        versionName gitVersionName
    }

    buildTypes {
        debug {
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'debug') {
                    variant.mergedFlavor.versionName = gitVersionNameFull;
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def date = new Date().format("yyyy-MM-dd___(HH.mm.ss)")
                    def newName = output.outputFile.name
                    newName = newName.replace(project.getName(), config.app_name)
                    newName = newName.replace("release", String.format("v%d(%s)___%s",
                            defaultConfig.versionCode, defaultConfig.versionName, date))

                    def outputFile = String.format("apk/%s", newName)
                    output.outputFile = new File(output.outputFile.parent, outputFile)
                }
            }
        }
    }
    buildToolsVersion '25.0.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile project(':library')
}
